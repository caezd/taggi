var Taggi=function(){"use strict";function e(e,n,r,o="beforeend"){const{start:c,end:s}=function(e,n,r="beforeend"){const o=`taggi:start:${n}`,c=`taggi:end:${n}`;let s=t(e,o),i=t(e,c);s&&i||(e.insertAdjacentHTML(r,`\x3c!--${o}--\x3e\x3c!--${c}--\x3e`),s=t(e,o),i=t(e,c));return{start:s,end:i}}(e,n,o);let i=c.nextSibling;for(;i&&i!==s;){const e=i.nextSibling;i.parentNode.removeChild(i),i=e}const u=Array.from(new Set(r));if(!u.length)return;const a=document.createElement("template");a.innerHTML=u.join(""),c.parentNode.insertBefore(a.content,s)}function t(e,t){const n=document.createTreeWalker(e,NodeFilter.SHOW_COMMENT,null);let r;for(;r=n.nextNode();)if(r.nodeValue===t)return r;return null}return class{constructor(e,t={}){this.config=e||{},this.options=Object.assign({defaultSelector:".taggit",fallbackOutput:(e,t)=>`<span class="taggit" data-tag="${t}">${e}</span>`},t),this.init()}init(t){const n=function(e){if(!e)return document;if("string"==typeof e){const t=document.createElement("template");return t.innerHTML=e,t.content}return e}(t);Object.entries(this.config).forEach(([t,r])=>{let o=r.selector||this.options.defaultSelector;Array.isArray(o)||(o=[o]);const c=Array.from(new Set(o.flatMap(e=>Array.from(n.querySelectorAll(e)))));if(!c.length)return;const s=new Map;if(c.forEach(e=>{const n=e.innerHTML,o=r.regex?this.parseRegex(n,r):this.parseShortcodeForTag(n,t,r);if(o.content!==n&&(e.innerHTML=o.content),r.inject&&o.found.length){const t=function(e,t){if("function"==typeof e)return e(t);if("string"==typeof e){const n=e.trim();if(!n)return null;if(n.startsWith("!")){const e=n.slice(1).trim();return e&&t.closest?t.closest(e):null}return t.closest?.(n)||document.querySelector(n)}return null}(r.inject,e);if(!t)return;s.has(t)||s.set(t,[]),s.get(t).push(...o.found)}}),r.inject&&s.size){const n=function(e){switch(e){case"afterbegin":case"beforeend":return e;case"after":return"afterbegin";default:return"beforeend"}}(r.position);for(const[r,o]of s)e(r,t,o,n)}})}parseShortcodeForTag(e,t,n){const r=[];return{content:e.replace(/\[([^\s\]]+)\s+([^\]]+)\]/g,(e,o,c)=>{if(o!==t)return e;const s=(n&&"function"==typeof n.output&&n.output||this.options.fallbackOutput)(c,o);return r.push(s),n&&n.inject?"":s}),found:r}}parseRegex(e,t){const n=[];let r=e;const o=t.regex.flags.includes("g")?t.regex.flags:t.regex.flags+"g",c=new RegExp(t.regex.source,o),s=new RegExp(t.regex.source,o);let i;for(;null!==(i=c.exec(e));){const e=t.output(...i.slice(1));n.push(e)}return r=r.replace(s,""),{content:r,found:n}}}}();
//# sourceMappingURL=taggi.js.map
